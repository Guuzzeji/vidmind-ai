version: '3.8'

# TODO: Break down file into different compose files since cannot run all at once
# TODO: Fix .env issue with some of the docker images
# TODO: Setup docker secrets, https://docs.docker.com/compose/use-secrets/
# TODO: Fix bugs in some of the serivces since moving to docker

# From: https://geshan.com.np/blog/2022/01/redis-docker/
# From: https://stackoverflow.com/questions/29377853/how-can-i-use-environment-variables-in-docker-compose
# How to use environment variables

# Notes
# - https://stackoverflow.com/questions/77355287/adding-local-minio-host-to-mc-configuration-failed-to-add-temporary-minio-ser
# - https://medium.com/@randy.hamzah.h/running-minio-server-with-docker-compose-54bab3afbe31

services:
  redis:
    image: redis:6.2-alpine
    container_name: redis
    # restart: always
    ports:
      - '6379:6379'
    # Have to set memory size of redis for BullMQ to work properly
    # From: https://peterkellner.net/2023/09/24/Managing-Redis-Memory-Limits-with-Docker-Compose/ 
    command: redis-server --save 20 1  --maxmemory 1GB --maxmemory-policy noeviction --loglevel warning 
    volumes: 
      - redis:/data
  
  db:
    container_name: db
    image: ankane/pgvector
    ports:
      - '5432:5432'
    # restart: always
    environment:
      POSTGRES_DB: VIDEO_INFOMATION
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    volumes:
      - ./misc/init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - s3-bucket

  s3-bucket:
    image: docker.io/bitnami/minio:2022
    container_name: s3-bucket
    ports:
      - '9000:9000'
      - '9001:9001' # This is used for webpage
    volumes:
      - 'minio_data:/data'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD} # pwd should be at least 8 char long
      MINIO_DEFAULT_BUCKETS: video-files

  frontend:
    build: ./Frontend
    container_name: frontend
    environment:
      - PORT=8080
      - REACT_APP_CHAT_API_URL=http://chatapi/API
      - REACT_APP_UPLOAD_API_URL=http://butcher/API
    ports:
      - '8080:8080'
    depends_on:
      - butcher

  butcher:
    build: ./VideoProcessingSerivce/Butcher
    container_name: butcher
    environment:
      WORKING_DIR: WORKSPACE
      PORT: 3030
      DEBUG: NO
      S3_HOST: s3-bucket:9000
      S3_KEY: ${S3_KEY}
      S3_PWD: ${S3_PWD}
      S3_DEV_MODE: YES
      S3_BUCKET_NAME: video-files
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_QUEUE_NAME: embed_tickets
    ports:
      - '3030:3030'
    depends_on:
      - s3-bucket
      - redis

  embeder:
    build: ./VideoProcessingSerivce/Embeder
    container_name: embeder
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PWD: ${POSTGRES_PASSWORD}
      DB_DATABASE_NAME: VIDEO_INFOMATION
      REDIS_SERVER_HOST: redis
      REDIS_SERVER_PORT: 6379
      REDIS_QUEUE_NAME: embed_tickets
      PORT: 4040
    ports:
      - '4040:4040'
    depends_on:
      - s3-bucket
      - redis
      - db

  chatapi:
    build: ./ChatSerivceAPI
    container_name: chatapi
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PWD: ${POSTGRES_PASSWORD}
      DB_DATABASE_NAME: VIDEO_INFOMATION
      PORT: 5050
    ports:
      - '5050:5050'
    depends_on:
      - s3-bucket
      - db

volumes:
  redis:
    driver: local
  minio_data:
    driver: local

